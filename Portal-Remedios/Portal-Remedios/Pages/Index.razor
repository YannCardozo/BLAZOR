@page "/index"
@inject HttpClient Http
@inject IJSRuntime JsRuntime
@using remedios;
@using Newtonsoft.Json;
@using Portal_Remedios.Models;



<PageTitle>Portal Remedios</PageTitle>
<br />
<div class="container">
    <div class="div-form-medicamento">
        <center>
            <h1 class="mb-3 class_cabecalho_medicamento" id="Cabecalho">@cabecalho</h1>
        </center>
            <center>
                @foreach (var item in new string[] { "Cadastro de Medicamento", "Cadastro de beneficiário", "Consulta de Medicamento" })
                {
                    <div class="mb-4 form-check form-check-inline">
                        <input type="radio" name="OpcaoRadioInput" id="@item" value="@item" @onchange="RadioSelection" checked=@(RadioValue.Equals(item,StringComparison.OrdinalIgnoreCase)) />
                        <label for="@item">@item</label>
                    </div>
                }
            </center>
        <EditForm Model="@modelRemedio">
            @if (@RadioValue == "Cadastro de Medicamento")
            {
                <style>
                    .LabelEmailPessoa{
                    display: none;
                    }
                    .EmailPessoa{
                    display:none;
                    }

                    .LabelCaixaTexto {
                    display: none;
                    }

                    .CaixaTexto {
                    display:none;
                    }

                    .ArquivoBula {
                    display: none;
                    }

                    .EnviaArquivoBula{
                    display:none;
                    }
                    .col-2, .col-4, .col-3, .col-1 {
                    text-align: -webkit-center;
                    }
                    #Inputareceberlocaldeposito{
                    background-color: gainsboro;
                    opacity: 0.7;
                    }

                </style>


                
                <div class="row mb-3">
                    <div class="col-4">
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label" id="Labelcadastrodemedicamento">Nome</label>
                            <InputText class="form-control Nomemedicamento" placeholder="Nome do medicamento" @bind-Value="modelRemedio.Nome"></InputText>
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label" id="Labelcadastrodemedicamento">Código</label>
                            <InputNumber class="form-control Codmedicamento" placeholder="Código medicamento" @bind-Value="modelRemedio.Codigo"></InputNumber>
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label" id="Labelcadastrodemedicamento">Código ANS</label>
                            <InputText class="form-control" id="CodAns" placeholder="Código ANS" @bind-Value="modelRemedio.Codigo_ANS"></InputText>
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label" id="Labelcadastrodemedicamento">Data lote:</label>
                            <input type="datetime-local" class="form-control" id="CodAns" placeholder="data de fabricação" @bind-value="modelRemedio.Data_lote">
                        </div>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-2">
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label" id="Labelcadastrodemedicamento">Data de depósito</label>
                            <input type="date" class="form-control" id="CodAns" placeholder="data de chegada" @bind-value="modelRemedio.Hora_Cadastro">
                        </div>
                    </div>

                <div class="col-4">
                    <div class="mb-3">
                        <label for="exampleFormControlInput1" class="form-label" id="Labelcadastrodemedicamento">Tipo do remédio:</label>
                        <InputSelect class="form-select Escolaridadeselect" aria-label="Tipo:" @bind-Value="modelRemedio.Tipo_remedio">
                            @foreach (var Tipo_remedio in Enum.GetValues(typeof(Tipo)))
                            {
                                <option value="@Tipo_remedio">@Tipo_remedio</option>
                            }
                        </InputSelect>
                    </div>
                </div>
                    <div class="col-2">
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label" id="Labelcadastrodemedicamento">Classificação:</label>
                            <InputSelect class="form-select Escolaridadeselect" aria-label="Tipo:" @bind-Value="modelRemedio.Cor">
                                @foreach (var Cor in Enum.GetValues(typeof(Classificacao)))
                                {
                                    <option value="@Cor">@Cor</option>
                                }
                            </InputSelect>
                        </div>
                    </div>

                    <div class="col-2">
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label" id="Labelcadastrodemedicamento">Região:</label>
                            <InputSelect class="form-select Escolaridadeselect" aria-label="Tipo:" @onchange="LiberaUnidade"  @bind-Value="modelRemedio.Nome_Regiao">
                                @foreach (var Nome_Regiao in Enum.GetValues(typeof(Regiao)))
                                {
                                    <option value="@Nome_Regiao">@Nome_Regiao</option>
                                }
                            </InputSelect>
                        </div>
                    </div>
                        <div class="col-2">
                            <div class="mb-3">
                                <label for="exampleFormControlInput1" class="form-label" id="Labelcadastrodemedicamento">Unidade:</label>
                                <InputSelect class="form-select Escolaridadeselect" aria-label="Tipo:" @bind-Value="modelRemedio.Nome_Unidade">
                                    @foreach (var Nome_Unidade in Enum.GetValues(typeof(Unidade)))
                                    {
                                        <option value="@Nome_Unidade">@Nome_Unidade</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>

                </div>


                <div class="row mb-3 Area-do-arquivo ">
                    <div class="col-10 mx-auto text-center">
                        <div class="mb-3">
                            <label for="formFile" class="form-label">Anexar Imagem do medicamento:</label>
                            <InputFile multiple class="form-control" type="file" id="formFile" OnChange="@CarregaImagem" />
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-10 mx-auto text-center">
                        <div class="mb-3 Imagem-carregada">
                            @foreach(var fonteimagem in Imagens)
                            {
                                <img src="@Imagens" style="width:100px;height:100px;" />
                            }
                        </div>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-4 mx-auto">
                        <button class="btn btn-outline-secondary" type="button" id="CadastraMedicamento" @onclick="ConfirmaModal" data-bs-toggle="modal" data-bs-target="#staticBackdrop">Cadastrar</button>
                    </div>
                </div>




                <div class="row mb-3">
                    <div class="col-4 mx-auto">
                        
                    </div>
                </div>

            }

             @if(confirmamedicamento == true)
            {
                <div class="modal" tabindex="-1" style="display:block">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title text-center">Confirma?</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick=FechaModal></button>
                            </div>
                            <div class="modal-body">
                                <div class="row mb-3 mx-auto text-center">
                                    <p>Nome: @modelRemedio.Nome</p>
                                    <p>Código: @modelRemedio.Codigo</p>
                                    <p>Código ANS: @modelRemedio.Codigo_ANS</p>
                                    <p>Data/lote: @modelRemedio.Data_lote</p>
                                    <p>Dt Depósito: @modelRemedio.Data_deposito</p>
                                    <p>Tipo: @modelRemedio.Tipo_remedio</p>
                                    <p>Classificação: @modelRemedio.Cor</p>
                                    <p>Região: @modelRemedio.Nome_Regiao</p>
                                    <p>Unidade: @modelRemedio.Nome_Unidade</p>
                                    <p>Imagem: @modelRemedio.Img_Remedio</p>
                                        <!-- <div class="col-2">
                                        <div class="mb-3">
                                        <label for="exampleFormControlInput1" class="form-label" id="Labelcadastrodemedicamento">Vaga depósito:</label>
                                        <input class="form-control" type="text" value="@localavagardeposito" placeholder="" readonly>
                                        <input type="text" id="Inputareceberlocaldeposito" name=""readonly>
                                        </div>
                                        </div>
                                        -->
                                </div>
                            </div>
                            <div class="modal-footer text-center">
                                <hr>
                                <button type="button" class="btn btn-success" @onclick=SalvaCadastroRemedio>Confirmar</button>
                                <button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick=CancelaCadastroRemedio>Cancelar</button>
                            </div>
                        </div>
                    </div>
                </div>


            }

            @if(@RadioValue == "Cadastro de beneficiário")
            {
                <style>
                    .EmailPessoa{
                    display: initial;
                    }

                    .col-2, .col-4, .col-3, .col-1 {
                        text-align: -webkit-center;
                    }
                </style>


                <div class="row">
                    <div class="col-4 mb-3">
                        <label for="exampleFormControlInput1" class="form-label Nomepessoa">Nome</label>
                        <input type="text" class="form-control Emailpessoa" placeholder="Nome completo">
                    </div>
                    <div class="col-2 mb-3">
                        <label for="exampleFormControlInput1" class="form-label Cpfpessoa">Cpf</label>
                        <Input type="text" class="form-control Cpfpessoa" placeholder="Cpf" />
                    </div>
                    <div class="col-2">
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label Labeldatadenascimentopessoa">Data nascimento</label>
                            <input type="date" class="form-control Datadenascimentopessoa" placeholder="Data de nascimento">
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label Labelsexopessoa">Sexo</label>
                            <select class="form-select Escolaridadeselect" aria-label="Sexo">
                                <option selected>Masculino</option>
                                <option value="1">Feminino</option>
                                <option value="2">Gênero Neutro</option>
                                <option value="3">Transgênero</option>
                                <option value="4">Não-binário</option>
                                <option value="5">Outros</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="mb-3">      
                            <label for="exampleFormControlInput1" class="form-label Labelceppessoa">Cep</label>
                            <InputText @bind-Value="@cep" class="form-control Ceppessoa" placeholder="Cep"  @onblur="@(() => ConsultarCep(cep))"/>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-4">
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label Labelenderecopessoa">Rua</label>
                            <input type="text" @bind-value="@Cep.logradouro" id="rua" class="form-control Enderecopessoa" placeholder="Endereço" />
                        </div>
                    </div>
                    <div class="col-1">
                        <label for="exampleFormControlInput1" class="form-label Labelnumeropessoa">Nº</label>
                        <input type="text" class="form-control numeropessoa" placeholder="Nº">
                    </div>
                    <div class="col-3">
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label Labelbairropessoa">Bairro</label>
                            <input type="text" @bind-value="@Cep.bairro" id="bairro" class="form-control Bairropessoa" placeholder="Bairro"/>
                        </div>
                    </div>
                    <div class="col-2">
                        <label for="exampleFormControlInput1" class="form-label Labelcidadepessoa">Cidade</label>
                        <input type="text" id="cidade" @bind-value="@Cep.cidade" class="form-control cidadepessoa" placeholder="Cidade">
                    </div>
                    <div class="col-2">
                        <label for="exampleFormControlInput1" class="form-label Labelocupacaopessoa">uf</label>
                        <input type="text" @bind-value="@Cep.uf" class="form-control Labelocupacaopessoa" placeholder="uf">
                    </div>
                </div>
                <div class="row">
                    <div class="col-2">
                        <label for="exampleFormControlInput1" class="form-label Labelocupacaopessoa">Ocupação</label>
                        <input type="text" class="form-control Labelocupacaopessoa" placeholder="Ocupação">
                    </div>
                    <div class="col-2">
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label Labeldatadenascimentopessoa">Nº NIS</label>
                            <input type="text" class="form-control Datadenascimentopessoa" placeholder="NIS">
                        </div>
                    </div>
                    <div class="col-2">
                        <label for="exampleFormControlInput1" class="form-label Labelescolaridadepessoa">Escolaridade</label>
                        <select class="form-select Escolaridadeselect" aria-label="Escolaridade">
                            <option selected>Ensino fundamental completo</option>
                            <option value="1">Ensino fundamental incompleto</option>
                            <option value="2">Ensino médio completo</option>
                            <option value="3">Ensino médio incompleto</option>
                            <option value="4">Ensino superior completo</option>
                            <option value="5">Ensino superior incompleto</option>
                        </select>
                    </div>
                    <div class="col-3 mb-3">
                        <label for="exampleFormControlInput1" class="form-label Labelmotivodocadastropessoa">Motivo do cadastro</label>
                        <select class="form-select Motivopacienteselect" aria-label="Motivo do cadastro">
                            <option selected>Baixa renda</option>
                            <option value="1">Auxílio saúde</option>
                            <option value="3">Outro benefício social</option>
                        </select>
                    </div>
                    <div class="col-3 mb-3">
                        <label for="exampleFormControlInput1" class="form-label Labelmotivodocadastropessoa">Renda Familiar Mensal</label>
                        <select class="form-select Motivopacienteselect" aria-label="Motivo do cadastro">
                            <option selected>Abaixo de R$2500,00</option>
                            <option value="1">Acima de R$2500,00</option>
                            <option value="3">Renda de R$2500,00</option>
                            <option value="3">Outros</option>
                        </select>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-4 mx-auto">
                        <button class="btn btn-outline-secondary" type="button" id="EnviaMedicamento">Cadastrar</button>
                    </div>
                </div>
            }

            @if(@RadioValue == "Consulta de Medicamento")
            {
                <style>
                    .EmailPessoa{
                    display: none;
                    }
                </style>


                <center>
                    <div class="row d-flex justify-content-center">
                        <div class="col-3">
                            <div class="mb-3">
                                <label for="exampleFormControlInput1" class="form-label">Selecione:</label>
                                <select class="form-select text-center Motivopacienteselect" id="consulta_opcao" aria-label="Motivo do cadastro" value="@verifica" @onchange="TrocaOpcao">
                                    <option value="Código do medicamento">@opcao_codmed</option>
                                    <option value="Código da ANS">@opcao_codans</option>
                                    <option value="NIS do paciente">@opcao_nis_paciente</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    @if(@verifica == true){
                        <div class="row d-flex justify-content-center">
                            <div class="col-3">
                                <div class="mb-3">
                                    <input type="text" class="form-control text-center Datadenascimentopessoa" placeholder="@titulo_opcao">
                                </div>
                            </div>
                        </div>
                        <div class="row d-flex justify-content-center">
                            <div class="col-3">
                                <button class="btn btn-primary" type="submit">Consultar</button>
                            </div>
                        </div>
                        }
                </center>
            }




        </EditForm>
    </div>
<SurveyPrompt Title="Tem algum erro no site ou uma sugestão a fazer?" />
</div>



@code{

    //2MB
    private const int TamanhoImgMaximo = 2 * 1024 * 1024;
    private List<string> Imagens = new List<string>();


    public Remedios modelRemedio = new();
    public List<Remedios> lstRemedios = new();
    //public Remedios modelRemedio = new();
    //public List<Remedios> lstRemedios = new();
    //modal cadastro remedio aqui:
    public string Nome_medicamento_modal { get; set; } = "afafafa";
    public string Código_medicamento_modal { get; set; } = "";
    public string Código_Ans_medicamento_modal { get; set; } = "";
    //public string Nome_medicamento_modal { get; set; } = "";
    //public string Nome_medicamento_modal { get; set; } = "";
    //public string Nome_medicamento_modal { get; set; } = "";
    //public string Nome_medicamento_modal { get; set; } = "";
    // public string Nome_medicamento_modal { get; set; } = "";
    //public string Nome_medicamento_modal { get; set; } = "";
    // public string Nome_medicamento_modal { get; set; } = "";
    //public string Nome_medicamento_modal { get; set; } = "";
    // public string Nome_medicamento_modal { get; set; } = "";
    //public string Nome_medicamento_modal { get; set; } = "";




    /*
    public string Text { get; set; }
    private void UpdateText(ChangeEventArgs e)
        {
        Text = e.Value.ToString();
    }
    */
    private async void Rodar()
    {
        try
        {
            HttpClient cliente = new HttpClient();

            string resultado = await cliente.GetStringAsync("https://localhost:5001/Remedios");
            Console.WriteLine(resultado);
            await JsRuntime.InvokeVoidAsync("alert", "Cadastro do " + " efetuado com sucesso!" + resultado + "funcionou");
        }
        catch
        {
            throw;
        }
    }

    private bool confirmamedicamento { get; set; } = false;
    bool ValueRegiao { get; set; } = false;
    string localavagardeposito { get; set; } = "";
    string titulo_opcao { get; set; }
    string opcao_codmed { get; set; } = "Código do medicamento";
    string opcao_codans { get; set; } = "Código da ANS";
    string opcao_nis_paciente { get; set; } = "NIS do paciente";
    bool verifica { get; set; } = false;

    private async Task ConfirmaModal()
    {


        //remedios = new Remedios();
        confirmamedicamento = true;
        //titulo_opcao = args.Value.ToString();
        await InvokeAsync(StateHasChanged);


    }
    private void FechaModal()
    {
        confirmamedicamento = false;
    }
    private async void CancelaCadastroRemedio()
    {
        //to clear textboxes and model
        // remedios = new Remedios();
        confirmamedicamento = false;
        await JsRuntime.InvokeVoidAsync("alert", "Dados deletados com sucesso");
    }
    private async void SalvaCadastroRemedio()
    {
        //here we save the changes --add to database
        //await _Remedios.addNewRemediosAsync(Remedios);
        //Close the dialog
        confirmamedicamento = false;
        //clear the model
        //Remedios = new Remedios();
        await JsRuntime.InvokeVoidAsync("alert", "Cadastro do " + " efetuado com sucesso!");
    }



    async void CadastraRemedioClica()
    {

        Console.WriteLine("From C#");
        await JsRuntime.InvokeVoidAsync("console.log", "estou funcionando");
    }

    async void LiberaUnidade(ChangeEventArgs args)
    {
        ValueRegiao = true;

        await InvokeAsync(StateHasChanged);
    }

    async void ZeraBool(ChangeEventArgs args)
    {
        verifica = false;
        await InvokeAsync(StateHasChanged);
    }
    async void TrocaOpcao(ChangeEventArgs args)
    {
        verifica = true;
        titulo_opcao = args.Value.ToString();
        await InvokeAsync(StateHasChanged);
    }
    async void SalvaFormularioMedicamento(ChangeEventArgs args)
    {
        verifica = true;
        titulo_opcao = args.Value.ToString();
        await InvokeAsync(StateHasChanged);
    }


    async Task CarregaImagem(InputFileChangeEventArgs e)
    {
        foreach(var arquivo in e.GetMultipleFiles())
        {
            using var stream = arquivo.OpenReadStream(TamanhoImgMaximo);
            using var ms = new MemoryStream();
            await stream.CopyToAsync(ms);
            Imagens.Add($"data:{arquivo.ContentType};base64,{Convert.ToBase64String(ms.ToArray())}");
        }
    }



}
@functions
{
    public string message { get; set; }
    public Cep Cep = new();
    public Cep valordocep { get; set; }
    string cep = "";
    string Regiao;
    string Unidade;
    string seleciona;
    string RadioValue = "aspnetcore";
    string cabecalho;
    string class_cabecalho_default = "";
    string class_cabecalho_medicamento = "";
    string class_cabecalho_pessoa = "";
    string class_cabecalho_bula = "";


    protected override async Task OnInitializedAsync()
    {

        titulo_opcao = "Selecione";
        cabecalho = "Pegamed";
        //await JsRuntime.InvokeVoidAsync("console.log", "valor do remedio: " + remedios[].Nome);

        await InvokeAsync(StateHasChanged);
        await base.OnInitializedAsync();
    }



    async void RadioSelection(ChangeEventArgs args)
    {
        RadioValue = args.Value.ToString();

        if (RadioValue == "Cadastro de Medicamento")
        {
            cabecalho = "Cadastro de Medicamento";
        }
        else if (RadioValue == "Cadastro de beneficiário")
        {
            cabecalho = "Cadastro de beneficiário";
        }
        else if (RadioValue == "Consulta de Medicamento")
        {
            verifica = false;
            cabecalho = "Consulta de Medicamento";
        }
        //cabecalho = RadioValue;
        await InvokeAsync(StateHasChanged);
    }


    async Task ConsultarCep(string cep)
    {

        await JsRuntime.InvokeVoidAsync("console.log", "meu valor é: " + cep + Cep.bairro + Cep.logradouro + Cep.complemento + Cep.cep + Cep.uf);

        if(cep is not null)
        {

            await JsRuntime.InvokeVoidAsync("console.log", "meu valor é: " + " entrei aqui no cep is not null");
            HttpClient httpClient = new HttpClient();
            var response = await httpClient.GetAsync($"https://viacep.com.br/ws/{cep}/json/");
            var jsonString = await response.Content.ReadAsStringAsync();

            Cep jsonObject = JsonConvert.DeserializeObject<Cep>(jsonString);

            if (jsonObject != null)
            {

                Cep.bairro = jsonObject.bairro;
                Cep.localidade = jsonObject.localidade;
                Cep.logradouro = jsonObject.logradouro;
                Cep.complemento = jsonObject.complemento;
                Cep.cep = jsonObject.cep;
                Cep.uf = jsonObject.uf;
                await JsRuntime.InvokeVoidAsync("console.log", "Meu jsonobject nao e nulo");
                await JsRuntime.InvokeVoidAsync("console.log", "meu valor é: " + Cep.bairro + Cep.logradouro + Cep.complemento + Cep.cep + Cep.uf);
                await InvokeAsync(StateHasChanged);
                cep = null;
                jsonObject = null;

            }
            else
            {
                cep = null;
                jsonObject = null;
                await JsRuntime.InvokeVoidAsync("console.log", "Cep digitado é inválido");
                Cep.bairro = "";
                Cep.localidade = "";
                Cep.logradouro = "";
                Cep.complemento = "";
                Cep.cep = "";
                Cep.uf = "";

                await InvokeAsync(StateHasChanged);

            }
        }








        //await InvokeAsync(StateHasChanged);


/*
            async Task CheckUsername(ChangeEventArgs e)
            {

        public string cep { get; set; }
        public string logradouro { get; set; }
        public string complemento { get; set; }
        public string bairro { get; set; }
        public string localidade { get; set; }
        public string uf { get; set; }
        public string ibge { get; set; }
        public string ddd { get; set; }

        public bool Vericacao = false; 


                message = string.Empty;
                if (e.Value is not null)
                {
                    username = e.Value.ToString();
                    var valid = await http.GetFromJsonAsync<bool>($"/checkusername?username={username}");
                    if (!valid)
                    {
                        message = "You must choose another user name";
                    }
                }
            }
            */



            //await JsRuntime.InvokeVoidAsync("alert", "Cadastro do " + " efetuado com sucesso!" + CepInteiro + "funcionou");
            
        


    }


}















